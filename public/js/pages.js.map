{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "client-js/pages.js",
    "client-js/simple-background-parallax.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "const SimpleBackgroundParallax = require('./simple-background-parallax.js')\n\nlet sbp = new SimpleBackgroundParallax('.parallax')\nsbp.start()\n\n\n\n\n\n",
    "/**\n * Takes elements that have backgrounds and changes their background position attribute\n * based on what percentage of its screen life it has spent on the screen.\n */\nclass SimpleBackgroundParallax {\n\t/**\n\t * \n\t * @param {string} elementSelector Describes which elements to control. ex '.parallax' or '.moving-background'\n\t */\n\tconstructor(elementSelector = '.parallax') {\n\t\tthis.elementSelector = elementSelector\n\t}\n\t\n\t/**\n\t * Adds listeners for scroll events so that the background \n\t * positions are automatically adjusted.\n\t */\n\tstart() {\n\t\twindow.addEventListener('scroll', evt => {\n\t\t\trequestAnimationFrame(this._positionBackgrounds.bind(this))\n\t\t})\n\t\tthis._positionBackgrounds()\n\t}\n\n\t_getAbsoluteCoordinates(elem) { // crossbrowser version\n\t\tlet box = elem.getBoundingClientRect();\n\n\t\tlet body = document.body;\n\t\tlet docEl = document.documentElement;\n\n\t\tlet scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop;\n\t\tlet scrollLeft = window.pageXOffset || docEl.scrollLeft || body.scrollLeft;\n\n\t\tlet clientTop = docEl.clientTop || body.clientTop || 0;\n\t\tlet clientLeft = docEl.clientLeft || body.clientLeft || 0;\n\n\t\tlet top  = box.top +  scrollTop - clientTop;\n\t\tlet left = box.left + scrollLeft - clientLeft;\n\n\t\treturn { top: Math.round(top), left: Math.round(left) };\n\t}\n\t\n\t_positionBackgrounds() {\n\t\tlet nodes = document.querySelectorAll(this.elementSelector)\n\t\tnodes.forEach(element => {\n\t\t\tlet box = element.getBoundingClientRect()\n\t\t\tlet abs = this._getAbsoluteCoordinates(element)\n\t\t\t\n\t\t\tlet firstSeenBoxTop = Math.min(window.innerHeight, abs.top)\n\t\t\tlet lastSeenBoxTop = Math.max(- box.height, abs.top - document.body.offsetHeight + window.innerHeight)\n\t\t\tlet range = firstSeenBoxTop - lastSeenBoxTop\n\t\t\t\n\t\t\tlet where = firstSeenBoxTop - box.top\n\t\t\t\n\t\t\tlet percentMovement = (where / range) * 100\n\t\t\tpercentMovement = Math.max(0, Math.min(100, percentMovement))\n\t\t\telement.style['background-position'] = `center ${percentMovement}%`\n\t\t})\n\t}\n}\n\nif(module) {\n\tmodule.exports = SimpleBackgroundParallax\n}"
  ]
}